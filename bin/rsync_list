#!/usr/bin/env ruby
# (c) KissCool
# 2009
# script pour récupérer une liste de fichiers
# et/ou dossiers en rsync

require 'shellwords'
require 'optparse'
require 'tempfile'

#########################################
# Variables de configuration par défaut
options = {
  :remote_host => "10.2.0.1",
  :remote_dir  => "/home/pub",
  :local_dir   => "/pub/balin_vrac/",
  :backup_file => "/tmp/rsync_list.back",
  :resume      => false
}


#########################################
# Parsing de l'entrée
OptionParser.new do |opts|
  opts.banner = "Mirror a list of objects using rsync\n\nUsage: #{$0.split("/").last} [options]"

  opts.on("-r", "--remote-host [LOGIN@]REMOTE", "Remote ssh host") do |remote|
    options[:remote_host] = remote
  end
  opts.on("-d", "--remote-dir DIR", "Remote base directory") do |dir|
    options[:remote_dir] = dir
  end
  opts.on("-l", "--local-dir DIR", "Local base directory") do |dir|
    options[:local_dir] = dir
  end
  opts.on("-b", "--backup-file FILE", "backup file needed to resume a session") do |file|
    options[:backup_file] = file
  end
  opts.on("-x", "--resume", "resume last session") do |x|
    options[:resume] = x
  end

end.parse!


#########################################
# 2 cas s'offrent à nous : normal et resume
# dans tous les cas il faut récupérer/créer
# la commande rsync qui sera exécutée
if options[:resume]
  # cas de resume
  # on récupère la ligne de commande dans le fichier de backup
  cmd = File.open(options[:backup_file]).first.chomp
else
  # cas normal
  # Récupération de la liste de fichiers via un éditeur

  # nous éditons un fichier temporaire avec notre $EDITOR préféré
  tmp = Tempfile.new('rsync_list_tmp')
  system "#{ENV['EDITOR']} #{tmp.path}"

  # puis construction de la string des fichiers/dossiers à récupérer
  list_path = ""
  tmp.each do |line|
    if !line.chomp.strip.empty?
      list_path << ":\"#{Shellwords.shellescape(options[:remote_dir] + "/" + line.chomp)}\" "
    end
  end

  # constitution de la string de la commande
  cmd = "rsync -Paz #{options[:remote_host]}#{list_path} #{options[:local_dir]}"
end

#########################################
# Exécution du rsync

# affichage de la commande pour info et copie dans un fichier pour reprise
puts cmd
File.open(options[:"backup_file"], "w") {|f| f.puts cmd}

# lancement du download
system "#{cmd}"
