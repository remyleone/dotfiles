Frequently Asked Questions about Linux_Logo


Sysinfo Problems

 Q1. The sysinfo is garbled, what should I do?
 Q2. Linux_Logo reports 1 Meg of RAM too little.  Why?

Logo Issues
 Q3. I don't like the periods in the classic logo. 
     (or) What happened to the old "-n" option

Usage Issues

 Q4. How can I have linux_logo update my /etc/issue file every X minutes?
 Q5. How can I have my boot messages scroll w/o moving linux_logo?
 Q6. How can I keep the system info from being centered?

Other
 Q7. Did you invent the Linux "Tux" logo?
 Q8. Why aren't you using the GPL3 license?
 Q9. Why don't you use "real" automake config files?

-------------------------------------------------------------------------


Q1. The sysinfo output of linux_logo looks garbled.  What can I do?

A1. First check your version of linux_logo (with "linux_logo -v") and
    see if it is the newest version available at the web-page.  If not,
    try getting the newest version.
    
    If it still doesn't quite look right, e-mail me a copy of your 
    /proc/cpuinfo file and I'll do my best to fix things up.
    
    
    
Q2. Linux_logo reports I have 1 megabyte less RAM than I actually do.

A2. If you have ACPI power management enabled, it uses some of your RAM.
    Also, if you have a built-in video card it will use some of the system
    RAM for video, which keeps Linux from seeing it.
    
    The "/proc/kcore" method of RAM detection I use doesn't count this
    RAM, thus misreporting it.
    
    I have added a hack for intel architectures that checks /proc/iomem
    for ACPI support and "fixes" the output.  Unfortunately this only
    works on 2.3.x kernels and later.



 Q3. I don't like the periods in the classic logo.
      (or) What happened to the old "-n" option
      
 A3. I was going to add back code that would take care of this.  But
     I am trying to avoid special-case code like this.  I spent most of
     the 3.9 development series getting rid of such hacks.
     
     So the solution is simply to edit the "logo_config" file and change
     the line that says
           ./logos/classic.logo
     to say instead
           ./logos/classic-no_periods.logo
     and recompile.



Q4. How can I make linux_logo run every 15 minutes or so, that way I can
    use the uptime option and impress my windows-using friends with my
    incredible uptime?
    
A4. This is a common question.  The best thing to do is use cron. 
    [See "man crontab"].  Setting up cron can be a bit tricky, but
    a line such as
    
       */15 * * * * linux_logo -u > /etc/issue.net
    
    Should have issue.net updated every 15 minutes.  Setting up a crontab
    file is a bit beyond the scope of this document; please see the
    manpage for details.
    
    
Q5. Can I have linux_logo stay on top of the screen while things scroll
    in a window beneath it?
    
A5. Bill Anderson <bill _at_ tb.dynip.com> did some research and came up with this: 
    
    I did successfully use:
       clear; /bin/echo -e '\033[018;25r' ; linux_logo

    to put the linux logo and info on the top 18 lines (fewer if you don't
    care about the system info) of the screen and let the rest scroll...
       /bin/echo -e '\033[0;0r' 
    will turn it off again...


Q6. How can I keep the system info from being centered?

A6. Starting with version 4.03 you can just use the "-k" command line option.

    On old versions you can use sed to do this.  (This only works with the
    -a ascii output option because otherwise centering is done with ANSI
    escape sequences).
    
        linux_logo -a -g | sed 's/^  *//'


Q7. Did you invent the Linux "Tux" logo?

A7. No.  Sometimes there seems to be some confusion about this.  I am only
    responsible for the program "linux_logo."
    
    Tux the Linux penguin was invented by Larry Ewing.  See his page here
    for more info: http://www.isc.tamu.edu/~lewing/linux/
    


Q8. Why don't you use the GPL3 license?

A8. I have been using the GPL2 for 10 years, and trust it, and feel no
    need to change that now.  It's my software, I get to pick the
    license.


Q9. Why don't you use "real" automake config files?

A9. I *hate* automake based config files.  Sure, when they work it's
    all happiness and fun, but when something goes wrong good luck
    figuring out what if you don't have a PhD in the m4 language.
    
    I also refuse to ship a "configure" file that's larger than all
    of the rest of my project put together.
    
    So for now you'll have to use my hacked up fake configure
    program.
