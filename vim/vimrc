""""""""""""""""""""""""""""""""""""""
" Fichier Vim de Remy 'Sieben' Leone
""""""""""""""""""""""""""""""""""""""

" Recherche pour déterminer le type d'un fichier (nom du fichier et d'autres
" trucs)

" Vous pouvez avoir une aide pour chaque option en tapant dans la ligne de commande de 
" vim :help suivi de l'option qui vous intéresse

filetype on

set ignorecase " Ignorer la casse
set showmatch " Voir les couples de parenthèses
set t_Co=256 "Nombre de couleurs 
set nocompatible " Choix pour vim like or vi like
set expandtab " Pour mettre des spaces à la place d'une tabulation il faut faire Ctrl-v<Tab>
set tabstop=4
set title " Show title in xterm
set shiftwidth=4
set mouse=a " enable mouse support in console
set softtabstop=4
set noerrorbells
set hlsearch
set showmode
set showcmd " Faire apparaitre les commandes dans la dernière ligne
set autoindent "Autoindentation 
set smartindent
set smartcase
set fileformat=unix
set ruler "Info sur position
set fdm=marker "Folding
set laststatus=2
set noautoread "Evite de mettre à jour le fichier au cas ou un autre editeur l'a modifié
"set spell " Spell checking
"setlocal spell spelllang=fr
set suffixes+=.class,.gz,.zip,.bz2,.tar,.pyc
set textwidth=79
set t_Co=256
set suffixes-=.h
set wildmenu " Permet d'afficher les options disponibles (Completion)
syn on
syntax on
set ttyfast 
set background=dark 
set incsearch
set icon
set encoding=utf-8
set splitbelow
set splitright
set nonumber
set novisualbell
set wildignore+=*.o,*.r,*.class,*.pyc,*.so,*.sl,*.tar,*.tgz,*.gz,*.dmg,*.zip,*.pdf,*CVS/*,*.svn/*,*.git/*,*.toc,*.aux,*.dvi,*.log
set wildmode=full
filetype indent on
filetype plugin on


" Show tabs and trailing whitespace visually

if (&termencoding == "utf-8") || has("gui_running")
    if has("gui_running")
       set list listchars=tab:»·,trail:·,extends:…,nbsp:‗
    else
        set list listchars=tab:»·,trail:·,extends:>,nbsp:_
    endif
    else
        set list listchars=tab:>-,trail:.,extends:>,nbsp:_
endif


" Dictionnaire 

if has('unix')
set dictionary=/usr/share/dict/french
endif


"""""""""""""""""
" Theme Molokai "
"""""""""""""""""

let g:molokai_original = 1
colorscheme molokai

" set lines=90 columns=200
" set background=dark

" Meilleure indentation en Python

filetype plugin indent on

" Fonction pour convertir les tabs en espace et mettre les fins 
" de ligne au format UNIX

fun CleanText()
	let curcol = col(".")
	let curline = line(".")
	exe ":retab"
	$//ge"xe ":%s/
	/ /ge"xe ":%s/
	exe ":%s/ \\+$//e"
call cursor(curline, curcol)
	endfun

	" CleanText est sur F6

	map <F6> :call CleanText()<CR>

	" Executer le script Python 

	map <silent> <F4> "<Esc>:w!<cr>:!python %<cr>"


" it will allow you to use :w!! to write to a file using sudo if you forgot to 
" sudo vim file (it will prompt for sudo password when writing)
cmap w!! %!sudo tee > /dev/null %

function StripTrailingWhitespace()
  if !&binary && &filetype != 'diff'
    normal mz
    normal Hmy
    %s/\s\+$//e
    normal 'yz<CR>
    normal `z
  endif
endfunction

map <Leader>strip :call StripTrailingWhitespace()<CR>

" make and python use real tabs
au FileType make                                     set noexpandtab
au FileType python                                   set noexpandtab

" thorfile, rakefile and gemfile are ruby
au bufread,bufnewfile {gemfile,rakefile,thorfile,config.ru}    set ft=ruby

" Tab completion
set wildmode=list:longest,list:full
set wildignore+=*.o,*.obj,.git,*.rbc

" CTags
map <Leader>rt :!ctags --extra=+f -R *<CR><CR>

"Directories for swp files
set backupdir=~/.vim/backup
set directory=~/.vim/backup


" Map <F2> to toggle the NERDTree
map <F2> :NERDTreeToggle<CR>

"instead of having to press 'ctrl-w h' to move to the window to the left, just press ctrl-h,
" etc.
map <C-h> <C-w>h
map <C-j> <C-w>j
map <C-k> <C-w>k
map <C-l> <C-w>l

" automatically insert a \v before any search string, so search uses
" normal regexes
nnoremap / /\v
vnoremap / /\v

" Enable OmniCompletion for Ruby
autocmd FileType ruby set omnifunc=rubycomplete#Complete
" ... and Rails
autocmd FileType ruby let g:rubycomplete_rails = 1
" ... and to include Classes in global completions
autocmd FileType ruby let g:rubycomplete_classes_in_global = 1
" Thorfile, Rakefile and Gemfile are Ruby
au BufRead,BufNewFile {Gemfile,Rakefile,Thorfile,config.ru}    set ft=ruby

" Syntax highlight shell scripts as per POSIX,
" not the original Bourne shell which very few use
let g:is_posix = 1

" CTags
map <Leader>rt :!ctags --extra=+f -R *<CR><CR>

" Ignore these files when completing names and in Explorer
set wildignore=.svn,CVS,.git,*.o,*.a,*.class,*.mo,*.la,*.so,*.obj,*.swp,*.jpg,*.png,*.xpm,*.gif

" Dictionary completion!
if has('unix')
    set dictionary=/usr/share/dict/words
endif

set wildignore+=*.o,*.r,*.class,*.pyc,*.so,*.sl,*.tar,*.tgz,*.gz,*.dmg,*.zip,*.pdf,*CVS/*,*.svn/*,*.git/*,*.toc,*.aux,*.dvi,*.log

" Status bar format
"set statusline=%<%f%m\ %r\ %h\ %w%=%l,%c\ %p%%
set statusline=%f\ %(%m%r%h\ %)%([%Y]%)%=%<%-20{getcwd()}\ [b%n]\ %l/%L\ ~\ %p%%\ \


" Always display the status bar
set laststatus=2

" Run Rspec for the current spec file
function! RunRspec()
ruby << EOF
  buffer = VIM::Buffer.current
  spec_file = VIM::Buffer.current.name
  command = "ruby ~/.vim/bin/run_rspec.rb #{spec_file}"
  print "Running Rspec for #{spec_file}. Results will be displayed in Firefox."
  system(command)
EOF
endfunction
map <F7> :w<CR> :call RunRspec()<cr>
map <F6> :A<CR> 

set list listchars=tab:>-,trail:.,extends:>

